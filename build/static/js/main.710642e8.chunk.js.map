{"version":3,"sources":["components/StyleSelector.js","components/main/Title.js","components/main/Day.js","components/main/MainPage.js","components/Image.js","App.jsx","index.js"],"names":["StyleSelector","setActiveStyle","useState","sidebar","setSidebar","toggleSidebar","className","to","onClick","console","log","Title","activeStyle","dayjs","extend","DayOfYear","Day","activeDate","setActiveDate","totalMood","setTotalMood","store","setStore","statusList","status","setStatus","saved","setSaved","dayOfYear","class","format","length","showFace","undefined","subtract","add","MainPage","mounted","useRef","useEffect","current","localStorage","setItem","JSON","stringify","Image","styles","icons","Date","value","onChange","next2Label","prev2Label","minDetail","tileDisabled","date","view","tileClassName","calenDay","tileContent","App","getItem","parse","path","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710642e8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {BiArrowFromLeft,BiArrowFromRight,BiCalendar, BiHappyAlt} from 'react-icons/bi';\r\nimport {GrEmoji} from 'react-icons/gr'\r\nimport {GiSadCrab} from 'react-icons/gi'\r\nimport {MdTrackChanges} from 'react-icons/md'\r\nimport { Link } from 'react-router-dom';\r\nimport './styleSelector.css'\r\n\r\nconst StyleSelector = ({setActiveStyle}) => {\r\n    const [sidebar, setSidebar] = useState(false); // Toggle sidebar visibility\r\n    const toggleSidebar = () => setSidebar(!sidebar); // Seperate function as bugfix\r\n\r\n    return (\r\n        <> {/*Try center the open and close buttons*/}\r\n            <div className='navbar'> {/*Fix the open button with css*/}\r\n                <Link to='#' className='menu-bars'>\r\n                    <BiArrowFromLeft onClick={toggleSidebar} />\r\n                </Link>\r\n            </div>\r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items' onClick={toggleSidebar}>\r\n                    <li className='navbar-toggle'>\r\n                        <Link to='#' className='menu-bars'>\r\n                            <BiArrowFromRight />\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-text'>\r\n                        <Link to='/tracker'> {/*Changing the state as it is rn wont change the page*/}\r\n                            <MdTrackChanges />\r\n                            <span> Tracker </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-text'>\r\n                        <Link to='#' onClick={() => {setActiveStyle('emoji'); console.log('emoji')}}> {/*Changing the state as it is rn wont change the page*/}\r\n                            <GrEmoji />\r\n                            <span> Style 1 </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-text'>\r\n                        <Link to='#' onClick={() => {setActiveStyle('turtle'); console.log('turtle')}}> {/*Changing the state as it is rn wont change the page*/}\r\n                            <GiSadCrab />\r\n                            <span> Style 2 </span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className='nav-text bottom'>\r\n                        <Link to='/my-calendar'> {/*Changing the state as it is rn wont change the page*/}\r\n                            <BiCalendar />\r\n                            <span> My Calendar </span>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StyleSelector\r\n\r\n\r\n","import React from 'react'\r\nimport './main.css'\r\n\r\nconst Title = ({activeStyle}) => {\r\n    return (\r\n        <div>\r\n           <h1 className = {activeStyle}> Hi, how was your day? </h1> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import React, {useState} from 'react'\r\nimport dayjs from 'dayjs'\r\nimport DayOfYear from 'dayjs/plugin/dayOfYear'\r\nimport {BiHappyAlt, BiSad} from 'react-icons/bi'\r\nimport {MdSentimentNeutral} from 'react-icons/md'\r\n\r\ndayjs.extend(DayOfYear);\r\n\r\nconst Day = ({ activeDate, setActiveDate, totalMood, setTotalMood, store, setStore}) => {\r\n    let statusList = ['none','happy','medium','sad']\r\n    const [status, setStatus] = useState(0)\r\n    const [saved, setSaved] = useState(false)\r\n    let day = activeDate.dayOfYear()\r\n\r\n    function showFace(status) {\r\n        switch (status) {\r\n            case 1:\r\n                return(<BiHappyAlt className = \"smiley\"/>)\r\n            case 2:\r\n                return(<MdSentimentNeutral className = \"smiley\"/>)\r\n            case 3:\r\n                return(<BiSad className = \"smiley\"/>)\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div class=\"wrapper\">\r\n                <div className='date'>\r\n                    {activeDate.format('dddd, MMMM D')}\r\n                </div>\r\n\r\n                <div \r\n                className={'day '+statusList[status] + (saved?' saved':'') + (status === 0?' defaultDay':'')} \r\n                onClick={()=>\r\n                    {\r\n                        if(status===(statusList.length-1)){\r\n                            setStatus(1)\r\n                        } else{\r\n                            setStatus(status+1)\r\n                        }                  \r\n                    }\r\n                }\r\n                >\r\n                    <div className=\"clue\">Press to Change</div>\r\n                    <div className=\"smiley\">{showFace(status)}</div>\r\n                </div>\r\n            </div>\r\n            <section className=\"buttons\">\r\n                <button \r\n                    className='button-center'\r\n                    onClick={()=>{\r\n                        if(totalMood[activeDate.subtract(1, 'day').format(\"DD MMM\")] !== undefined){\r\n                            setStatus(totalMood[activeDate.subtract(1, 'day').format(\"DD MMM\")])\r\n                            setSaved(true)\r\n                        } else{\r\n                            setStatus(0)\r\n                            setSaved(false)\r\n                        }\r\n                        setTotalMood({...totalMood, [activeDate.format(\"DD MMM\")]:status})\r\n                        setStore(!store)\r\n                        setActiveDate(activeDate.subtract(1,'day'))\r\n                    }}\r\n                >Prev</button>\r\n\r\n                    <button \r\n                        className='button-center'\r\n                        onClick={()=>{\r\n                            if(totalMood[activeDate.add(1, 'day').format(\"DD MMM\")] !== undefined){\r\n                                setStatus(totalMood[activeDate.add(1, 'day').format(\"DD MMM\")])\r\n                                setSaved(true)\r\n                            } else{\r\n                                setStatus(0)\r\n                                setSaved(false)\r\n                            }\r\n                            setTotalMood({...totalMood, [activeDate.format(\"DD MMM\")]:status})\r\n                            setStore(!store)\r\n                            setActiveDate(activeDate.add(1,'day'))\r\n                        }}\r\n                    >Next</button>\r\n            </section>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport Title from \"./Title\";\r\nimport Day from \"./Day\";\r\nimport dayjs from 'dayjs'\r\n\r\nconst MainPage = ({activeStyle, totalMood, setTotalMood, activeDate, setActiveDate}) => {\r\n    const [store, setStore] = useState(false)\r\n    const mounted = useRef(false);\r\n\r\n    \r\n        \r\n    useEffect(()=>{\r\n        if(mounted.current !== false){\r\n        localStorage.setItem('moodCalendar', JSON.stringify(totalMood))\r\n        localStorage.setItem('date', JSON.stringify(activeDate))\r\n        } else{\r\n        mounted.current = true;\r\n        }\r\n    },[store])\r\n    console.log(activeStyle)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Title activeStyle={activeStyle}/>\r\n                <Day activeDate={activeDate} setActiveDate={setActiveDate} totalMood={totalMood} setTotalMood={setTotalMood} store={store} setStore={setStore}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import {useEffect, useState} from 'react'\r\nimport './main/main.css'\r\nimport dayjs from 'dayjs'\r\nimport Calendar from 'react-calendar'\r\nimport './reactStyles.css';\r\nimport {BiHappyAlt, BiSad} from 'react-icons/bi'\r\nimport {MdSentimentNeutral} from 'react-icons/md'\r\n\r\nconst Image = ({totalMood, activeStyle}) => {\r\n    // const [data,setData] = useState()\r\n\r\n    // showColors(data) {\r\n    //     (data!==undefined? \r\n    //         data.map((day)=>{\r\n    //             console.log(day);\r\n    //             return(<h1 className={styles[day[1]]}>{day[0]}</h1>)\r\n    //         })\r\n    //     : \r\n    //    console.log(\"data is empty\")\r\n    // }     \r\n\r\n    // useEffect(()=>{\r\n    //     setData(Object.entries(JSON.parse(localStorage.getItem('moodCalendar'))))\r\n    //     console.log(data)\r\n    // },[])\r\n    // console.log(data)\r\n\r\n    let styles = ['none','happy', 'sad', 'medium'];\r\n    let icons = [0, <BiHappyAlt />, <MdSentimentNeutral />, <BiSad />]\r\n\r\n    let none = []\r\n    let happy = []\r\n    let sad = []\r\n    let medium = []\r\n\r\n    console.log(totalMood + \"mid file\")\r\n\r\n    // data.forEach(day => {\r\n    //     switch(day[1]) {\r\n    //         case 1:\r\n    //             happy.push(day[0])\r\n    //             break\r\n    //         case 2:\r\n    //             medium.push(day[0])\r\n    //             break\r\n    //         case 3:\r\n    //             sad.push(day[0])\r\n    //             break\r\n    //         default:\r\n    //             none.push(day[0])\r\n    //     }\r\n    // });\r\n\r\n    const [value, onChange] = useState(new Date());\r\n\r\n    return (\r\n        <>\r\n        <div className=\"flexboxtest\">\r\n        {/* {\r\n            (data!==undefined?\r\n                data.map((day)=>{\r\n                    console.log(day);\r\n                    return(\r\n                        <div className={'flex-day '+styles[day[1]]}>{day[0]}</div>\r\n                    )\r\n                })\r\n\r\n                :\r\n                    \"Loading\")\r\n            } */}\r\n         <Calendar \r\n                onChange={onChange}\r\n                value={value}\r\n                next2Label = \"\"\r\n                prev2Label = \"\"\r\n                minDetail = \"year\"\r\n\r\n                tileDisabled={({date, view})=>{\r\n                    return true;\r\n                }} \r\n\r\n                tileClassName={({date, view})=> {\r\n                    let calenDay = dayjs(date).format(\"DD MMM\")\r\n                    console.log(\"reached this code\")\r\n                    if(totalMood[calenDay] !== undefined) {\r\n                        console.log(totalMood[calenDay])\r\n                        return styles[totalMood[calenDay]]\r\n                    }\r\n                    else {\r\n                        return(styles[0])\r\n                    }\r\n\r\n                }}\r\n\r\n                tileContent={({date, view}) => {\r\n                    let calenDay = dayjs(date).format(\"DD MMM\")\r\n                    if(totalMood[calenDay] !== undefined) {\r\n                        console.log(totalMood[calenDay])\r\n                        return icons[totalMood[calenDay]]\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Image\r\n","import { useState, useEffect} from \"react\";\r\nimport StyleSelector from \"./components/StyleSelector\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport MainPage from \"./components/main/MainPage\";\r\nimport Image from \"./components/Image\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction App() {\r\n  const [activeStyle,  setActiveStyle] = useState('turtle') // This is the active state, you need to pass it into any components you make \r\n  const [activeDate, setActiveDate] = useState(dayjs(new Date()))\r\n  const [totalMood, setTotalMood] = useState({})\r\n\r\n  console.log(totalMood + \"in app.jsx\")\r\n\r\n  useEffect(()=>{\r\n    if(localStorage.getItem('moodCalendar') !== null){\r\n    console.log(\"Load\")\r\n    setTotalMood(JSON.parse(localStorage.getItem('moodCalendar')))\r\n    }\r\n    if(localStorage.getItem('date') !== null){\r\n    console.log(\"Load\")\r\n    setActiveDate(dayjs(JSON.parse(localStorage.getItem('date'))))\r\n    }\r\n  }, []) \r\n\r\n\r\n  return (\r\n    <Router>\r\n      <StyleSelector setActiveStyle = {setActiveStyle} /> {/* The active state wont affect the style bar */}\r\n      <Switch>\r\n        <Route path='/tracker' exact render={(props)=> (<MainPage {...props} \r\n          activeStyle={activeStyle} \r\n          totalMood={totalMood} \r\n          setTotalMood={setTotalMood}\r\n          activeDate={activeDate}\r\n          setActiveDate={setActiveDate}/>)}/>\r\n        <Route path='/my-calendar' exact render={(props)=> (<Image {...props} \r\n          activeStyle={activeStyle} \r\n          totalMood={totalMood}\r\n          activeDate={activeDate}\r\n          setActiveDate={setActiveDate} />)}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}